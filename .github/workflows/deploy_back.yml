name: Deploy project back
on:
  push:
    branches:
      - main

jobs:
  test_node:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: test node
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          export NVM_DIR="$HOME/.nvm"
          if [ -s "$NVM_DIR/nvm.sh" ]; then
            . "$NVM_DIR/nvm.sh"
          else 
            echo "nvm.sh not found"
            exit 1
          fi

          nvm -v
          nvm use --lts
          node -v
          npm -v'

  test_mysql:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: check mysql
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          sudo service mysql status'

      - name: test mysql user
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          mysql -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e "SHOW DATABASES;"'

  deploy_pinterest-back:
    runs-on: ubuntu-latest
    needs:
      - test_node
      - test_mysql
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Install Dependencies of pinterest
        working-directory: ./backend
        run: npm i

      - name: create .env
        working-directory: ./backend
        run: |
          echo DB_HOST="${{secrets.DB_HOST}}" > .env
          echo DB_PORT="${{secrets.DB_PORT}}" >> .env
          echo DB_USERNAME="${{secrets.DB_USERNAME}}" >> .env
          echo DB_PASSWORD="${{secrets.DB_PASSWORD}}" >> .env
          echo DB_DATABASE="${{secrets.DB_DATABASE}}" >> .env
          echo SYNCHRONIZE="${{secrets.SYNCHRONIZE}}" >> .env
          echo DB_LOGGING="${{secrets.DB_LOGGING}}" >> .env
          echo CLIENT_ID="${{secrets.CLIENT_ID}}" >> .env
          echo CLIENT_SECRET="${{secrets.CLIENT_SECRET}}" >> .env
          echo GOOGLEUSER_PW="${{secrets.GOOGLEUSER_PW}}" >> .env
          echo GOOGLE_BR="${{secrets.GOOGLE_BR}}" >> .env

      - name: Build Back
        working-directory: ./backend
        run: |
          npm run build

      - name: delete map
        working-directory: ./backend/dist
        run: |
          rm -rf ./**/*/*.map

      - name: Copy Files to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            rm -rf /var/www/pinterestback
            mkdir /var/www/pinterestback'

          rsync -avz -e "ssh" ./backend/dist/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/pinterestback/dist/
          rsync -avz -e "ssh" ./backend/package.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/pinterestback/package.json
          rsync -avz -e "ssh" ./backend/.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/pinterestback/.env
          rsync -avz -e "ssh" ./backend/tsconfig.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/pinterestback/tsconfig.json
          rsync -avz -e "ssh" ./backend/upload/${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/pinterestback/upload/

      - name: Install and Configure Node.js and PM2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            export NVM_DIR="$HOME/.nvm"
            if [ -s "$NVM_DIR/nvm.sh" ]; then
              . "$NVM_DIR/nvm.sh"
            else 
              echo "nvm.sh not found"
              exit 1
            fi
            nvm use --lts
            cd /var/www/pinterestback
            npm i --production'

      - name: Start Server
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            export NVM_DIR="$HOME/.nvm"
            if [ -s "$NVM_DIR/nvm.sh" ]; then
              . "$NVM_DIR/nvm.sh"
            else 
              echo "nvm.sh not found"
              exit 1
            fi
            nvm use --lts
            npm install -g pm2
            pm2 stop all

            cd /var/www/pinterestback

            npm run start:prod
          '
